@using appSchool.Repositories
@using appSchool.ViewModels
@model modelStudentFeesReceipt

@*@Html.Hidden("StudentID")*@


<div class="row">

    <div class="col-sm-2">
        @Html.DevExpress().LabelFor(
        model => model.ReceiptNo,
        settings =>
                {
            settings.ControlStyle.CssClass = "col-form-label-sm";
            settings.Text = "ReceiptNo.";
            settings.AssociatedControlName = "ReceiptNo";
        }
        ).GetHtml()
        @Html.DevExpress().TextBoxFor(
         model => model.ReceiptNo,
         settings =>
         {
             settings.Name = "ReceiptNo";
             settings.ControlStyle.CssClass = "form-control";
             settings.ReadOnly = true;
         }).GetHtml()
    </div>

    <div class="col-sm-2">
        @Html.DevExpress().LabelFor(
            model => model.ReceiptDate,
            settings =>
                 {
                settings.ControlStyle.CssClass = "col-form-label-sm";
                settings.Text = "Receipt Date";
                settings.AssociatedControlName = "ReceiptDate";

            }
        ).GetHtml()
        @Html.DevExpress().DateEditFor(
                  model => model.ReceiptDate,
                  settings =>
                       {
                      settings.Name = "ReceiptDate";
                      settings.ControlStyle.CssClass = "form-control";
                      settings.Properties.NullText = "dd MMM yyyy";
                      settings.Properties.EditFormat = EditFormat.Custom;
                      settings.Properties.MaxDate = DateTime.Now;
                      settings.Properties.EditFormatString = "dd MMM yyyy";
                      settings.Date = DateTime.Now;
                      //settings.ShowModelErrors = true;
                      //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     // settings.ReadOnly = true;
                      //settings.Enabled = false;

            }
              ).GetHtml()
    </div>

    <div class="col-sm-3">

        @Html.DevExpress().Label(settingslbl =>
          {
              settingslbl.Name = "lblstudentdd";
              settingslbl.Width = Unit.Percentage(100);
              settingslbl.ControlStyle.CssClass = "col-form-label-sm";
              settingslbl.Text = "Select Student";

          }).GetHtml()

        @Html.Partial("ListStudentGridLookupPartial", new UnitOfWork().studentSessionService.GetAllStudentForSessionNameWise(Model.SessionID, byte.Parse(Model.CompID.ToString()), byte.Parse(Model.BranchID.ToString())  )  )     

        @Html.DevExpress().TextBox(
        settingscls =>
        {
            settingscls.Name = "txtStudentID";
            settingscls.ClientVisible = false;

        }).GetHtml()

        @Html.DevExpress().TextBoxFor(
        model => model.StudentID,
        settings =>
        {

            settings.Name = "StudentID";
            settings.ControlStyle.CssClass = "form-control";
            //settings.ShowModelErrors = true;
            //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ReadOnly = true;
            settings.ClientVisible = false;
        }).GetHtml()

        @Html.DevExpress().TextBoxFor(
        model => model.StudentName,
        settings =>
        {

            settings.Name = "txtstudentname";
            settings.ControlStyle.CssClass = "form-control";
            //settings.ShowModelErrors = true;
            //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ReadOnly = true;
            settings.ClientVisible = false;
        }).GetHtml()

    </div>

    <div class="col-sm-2">
        @Html.DevExpress().LabelFor(
            model => model.EnrollmentNo,
            settings =>
                 {
            settings.ControlStyle.CssClass = "col-form-label-sm";
            settings.Text = "Enrollment No";
            settings.AssociatedControlName = "EnrollmentNo";
        }
        ).GetHtml()
        @Html.DevExpress().TextBoxFor(
        model => model.EnrollmentNo,
        settings =>
        {

            settings.Name = "EnrollmentNo";
            settings.ControlStyle.CssClass = "form-control";
            //settings.Properties.MaskSettings.Mask = "(AAA)-000-0000";
            // settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
            settings.ReadOnly = true;
        }).GetHtml()

    </div>

    <div class="col-sm-3">
        @Html.DevExpress().LabelFor(
            model => model.FatherName,
            settings =>
                 {
            settings.ControlStyle.CssClass = "col-form-label-sm";
            settings.Text = "Father Name";
            settings.AssociatedControlName = "FatherName";
        }
        ).GetHtml()
        @Html.DevExpress().TextBoxFor(
                model => model.FatherName,
                settings =>
                    {
            settings.ControlStyle.CssClass = "form-control";
            //settings.ShowModelErrors = true;
            //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ReadOnly = true;

        }).GetHtml()

       
    </div>

</div>

<div class="row">

    <div class="col-sm-2">
        @Html.DevExpress().LabelFor(
           model => model.MobileNo,
           settings =>
                {
            settings.ControlStyle.CssClass = "col-form-label-sm";
            settings.Text = "Mobile No.";
            settings.AssociatedControlName = "MobileNo";
        }
       ).GetHtml()
        @Html.DevExpress().TextBoxFor(
                model => model.MobileNo,
                settings =>
                    {
            settings.ControlStyle.CssClass = "form-control";
            //settings.ShowModelErrors = true;
            //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ReadOnly = true;

        }).GetHtml()
    </div>


    <div class="col-sm-2">
        @*@Html.Hidden("ClassID")*@
        @Html.DevExpress().LabelFor(
                model => model.Class,
                settings =>
                    {
            settings.ControlStyle.CssClass = "col-form-label-sm";
            settings.Text = "Class";
            settings.AssociatedControlName = "Class";
        }
            ).GetHtml()
        @Html.DevExpress().TextBoxFor(
        model => model.Class,
        settings =>
            {
            settings.ControlStyle.CssClass = "form-control";
            settings.ReadOnly = true;
        }).GetHtml()
        @Html.DevExpress().TextBoxFor(
        model => model.ClassID,
        settings =>
        {
            settings.ControlStyle.CssClass = "form-control";
            settings.ReadOnly = true;
            settings.ClientVisible = false;
        }).GetHtml()

    </div>




    <div class="col-sm-3">
        @*@Html.Hidden("TermId")*@

        @Html.DevExpress().LabelFor(
                model => model.TermName,
                settings =>
                    {
                    settings.ControlStyle.CssClass = "col-form-label-sm";
                    settings.Text = "Term Name";
                    settings.AssociatedControlName = "TermName";
                }
            ).GetHtml()
        @Html.DevExpress().TextBoxFor(
                model => model.TermName,
                settings =>
                {
                    settings.ControlStyle.CssClass = "form-control";
                    settings.ReadOnly = true;
                }).GetHtml()


        @Html.DevExpress().TextBoxFor(
                model => model.TermId,
                settings =>
                {
                    settings.ControlStyle.CssClass = "form-control";
                    settings.ClientVisible = false;
                    //settings.ReadOnly = true;
                }).GetHtml()

        @Html.DevExpress().TextBox(
        settingscls =>
        {
            settingscls.Name = "txttermid";
            settingscls.ClientVisible = false;

        }).GetHtml()



    </div>

    

    <div class="col-sm-3">
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnhangefeesstructure";
                settings.ControlStyle.CssClass = "button btnpaddingrow10px";
                settings.Text = "Change Fees Structure";
                settings.UseSubmitBehavior = false;
                settings.ClientSideEvents.Click = "feesTransactionController.OnclickChangeFeesStructure";
            }).GetHtml()
       
    </div>

</div>

    <div class="row" style="margin-top:10px">


        <div class="col-sm-5">
            <label class="gridlablecolor">Fees Term List</label>
            @*@Html.DevExpress().HyperLink(settingshpyrlink =>
                {
                    settingshpyrlink.Name = "hyperLinkAcCnor";
                    settingshpyrlink.NavigateUrl = "";
                    //settingshpyrlink.Properties.ImageUrl = "~/Content/Images/Add.png";
                    settingshpyrlink.Properties.Text = "Change Structure";
                    settingshpyrlink.ControlStyle.Font.Underline = true;
                    //settingshpyrlink.ControlStyle.Font.Bold = true;
                    settingshpyrlink.ControlStyle.ForeColor = System.Drawing.Color.Blue;
                    settingshpyrlink.Properties.ClientSideEvents.Click = "feesTransactionController.OnclickChangeFeesStructure";
                }).GetHtml()*@
            <div id="GridTermListForFeeID">
                @Html.Partial("ListTermView", new UnitOfWork().feesReceiptService.GetTermListForFeesReceiptStudentWise(Model.StudentID, Model.StudentID, byte.Parse(Model.CompID.ToString()), byte.Parse(Model.BranchID.ToString())))
            </div>
        </div>

        <div class="col-sm-7">
            <label class="gridlablecolor">Fees Head List</label>
            <div id="GridHeadListForFeeID">
                @Html.Partial("ListHeadView", new UnitOfWork().StudentFeesDetailService.GetStudentFeesDetailByTermIDandStudentID(Model.StudentID, Model.TermId, Model.StudentID, byte.Parse(Model.CompID.ToString()), byte.Parse(Model.BranchID.ToString())))
            </div>
        </div>

    </div>

    <div class="row">

        <div class="col-sm-2">
            @Html.DevExpress().LabelFor(
                                model => model.TermTotal,
                                settings =>
                                    {
                                    settings.ControlStyle.CssClass = "col-form-label-sm";
                                    settings.Text = "Term Total";
                                    settings.AssociatedControlName = "TermTotal";
                                }
                            ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                    model => model.TermTotal,
                    settings =>
                        {
                            settings.ControlStyle.CssClass = "form-control";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        settings.ReadOnly = true;

                        }).GetHtml()
        </div>

        <div class="col-sm-1">
            @Html.DevExpress().LabelFor(
                               model => model.FineAmount,
                               settings =>
                                   {
                                   settings.ControlStyle.CssClass = "col-form-label-sm";
                                   settings.Text = "Fine Amount";
                                   settings.AssociatedControlName = "FineAmount";
                               }
                           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                    model => model.FineAmount,
                    settings =>
                        {
                            settings.ControlStyle.CssClass = "form-control";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        settings.ReadOnly = false;
                        settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.Gettotal";

                        }).GetHtml()
        </div>
        <div class="col-sm-1">
            @Html.DevExpress().LabelFor(
                               model => model.OtherAmount,
                               settings =>
                                   {
                                   settings.ControlStyle.CssClass = "col-form-label-sm";
                                   settings.Text = "Other Amt.";
                                   settings.AssociatedControlName = "OtherAmount";
                               }
                           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                    model => model.OtherAmount,
                    settings =>
                        {
                            settings.ControlStyle.CssClass = "form-control";
                        settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.Gettotal";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        settings.ReadOnly = false;

                        }).GetHtml()
        </div>
        <div class="col-sm-2">

            @Html.DevExpress().LabelFor(
                               model => model.SubTotal,
                               settings =>
                                   {
                                   settings.ControlStyle.CssClass = "col-form-label-sm";
                                   settings.Text = "Sub Total";
                                   settings.AssociatedControlName = "SubTotal";
                               }
                           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                    model => model.SubTotal,
                    settings =>
                    {


                        settings.ControlStyle.CssClass = "form-control";
                        //settings.ControlStyle.CssClass = "txtfooterset";
                        settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.Gettotal";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        settings.ReadOnly = true;

                    }).GetHtml()
        </div>

        <div class="col-sm-1">
            @Html.DevExpress().LabelFor(
                                model => model.DiscountPercent,
                                settings =>
                                    {
                                    settings.ControlStyle.CssClass = "col-form-label-sm";
                                    settings.Text = "Dis. Per.";
                                    settings.AssociatedControlName = "DiscountPercent";
                                }
                            ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                    model => model.DiscountPercent,
                    settings =>
                        {
                            settings.ControlStyle.CssClass = "form-control";
                         settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.GetDiscount";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        settings.ReadOnly = false;

                        }).GetHtml()

        </div>
        <div class="col-sm-1">

            @Html.DevExpress().LabelFor(
                    model => model.DiscountAmount,
                    settings =>
                        {
                            settings.ControlStyle.CssClass = "col-form-label-sm";
                             settings.Text = "Dis. Amt.";

                            settings.AssociatedControlName = "DiscountAmount";
                    }
                ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                    model => model.DiscountAmount,
                    settings =>
                        {
                            settings.ControlStyle.CssClass = "form-control txtfooterset";
                        settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.Gettotal";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        settings.ReadOnly = false;

                        }).GetHtml()
        </div>

        <div class="col-sm-1">
            @Html.DevExpress().LabelFor(
                                model => model.FinalAmount,
                                settings =>
                                    {
                                    settings.ControlStyle.CssClass = "col-form-label-sm ";
                                    settings.Text = "FinalAmount";
                                    settings.AssociatedControlName = "FinalAmount";
                                }
                            ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                    model => model.FinalAmount,
                    settings =>
                        {
                            settings.ControlStyle.CssClass = "form-control txtfooterset ";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        settings.ReadOnly = true;

                        }).GetHtml()




        </div>

        <div class="col-sm-2">

            @Html.DevExpress().LabelFor(
            model => model.PaidAmount,
            settings =>
                {
                settings.ControlStyle.CssClass = "col-form-label-sm ";
                settings.Text = "Paid Amount";
                settings.AssociatedControlName = "PaidAmount";
            }
             ).GetHtml()
            @Html.DevExpress().TextBoxFor(
           model => model.PaidAmount,
           settings =>
           {
               settings.Name = "PaidAmount";
               settings.ControlStyle.CssClass = "form-control";
               settings.ReadOnly = true;
               settings.ClientVisible = true;
           }).GetHtml()
        </div>

    </div>

    <div class="row">



        <div class="col-sm-3">
        </div>

    </div>

    <div class="row">


        <div class="col-sm-2">
            @Html.DevExpress().Label(
       settings =>
            {
              settings.Text = "Pay Mode";
              settings.AssociatedControlName = "Pay Mode";
         }).GetHtml()

            @Html.DevExpress().ComboBoxFor(
                      model => model.PayMode,
                              settings =>
                                {
                                  settings.Name = "PayMode";
                                 // settings.ControlStyle.CssClass = "form-control";
                                  settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                                  settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                  settings.Properties.TextField = "Value";
                                  settings.Properties.ValueField = "Key";
                                  settings.SelectedIndex = 0;
                                  settings.Properties.ClientSideEvents.SelectedIndexChanged = "feesTransactionController.SelectionChangePaymode";

                                }
                          ).BindList(cCommon.GePayModeListForFee()).GetHtml()
        </div>

        <div class="col-sm-2">
            @Html.DevExpress().Label(
       settings =>
            {
           settings.Text = "Mode";
           settings.AssociatedControlName = "Bank Mode";
         }).GetHtml()

            @Html.DevExpress().ComboBoxFor(
                      model => model.Mode,
                              settings =>
                                {
                                  settings.Name = "Mode";
                                 // settings.ControlStyle.CssClass = "form-control";
                                  settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                                  settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                  settings.Properties.TextField = "Value";
                                  settings.Properties.ValueField = "Key";
                                  settings.SelectedIndex = 0;

                        //settings.ShowModelErrors = true;
                                  //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                                  settings.Properties.ClientSideEvents.SelectedIndexChanged = "feesTransactionController.SelectionChangebankPaymode";

                                }
                          ).BindList(cCommon.GetBankPayModeListForFee()).GetHtml()
        </div>

        <div class="col-sm-2">
            @Html.DevExpress().Label(
       settings =>
            {
           settings.Text = "Cheque No.";
           settings.AssociatedControlName = "ChequeNo";
         }).GetHtml()

            @Html.DevExpress().TextBoxFor(
                    model => model.ChequeNo,
                   settings =>
                        {
                       settings.ShowModelErrors = true;
                       settings.ControlStyle.CssClass = "form-control";
                       //settings.ShowModelErrors = true;
                       //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       settings.Name = "ChequeNo";
                       settings.ReadOnly = true;
                       settings.Properties.EnableClientSideAPI = true;
                   }).GetHtml()
        </div>

        <div class="col-sm-2">
            @Html.DevExpress().LabelFor(
                model => model.ChequeDate,
                settings =>
                     {
                    settings.ControlStyle.CssClass = "col-form-label-sm";
                    settings.Text = "Cheque Date";
                    settings.AssociatedControlName = "ChequeDate";

                }
            ).GetHtml()
            @Html.DevExpress().DateEditFor(
                      model => model.ChequeDate,
                      settings =>
                           {
                          settings.Name = "ChequeDate";
                          settings.ControlStyle.CssClass = "form-control";
                          settings.Properties.NullText = "dd MMM yyyy";
                          settings.Properties.EditFormat = EditFormat.Custom;
                          settings.Properties.MaxDate = DateTime.Now;
                          settings.Properties.EditFormatString = "dd MMM yyyy";
                          settings.ReadOnly = false;
                          //settings.ShowModelErrors = true;
                          //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                         // settings.ReadOnly = true;
                          //settings.Enabled = false;

                }
                  ).GetHtml()
        </div>

        <div class="col-sm-2">
            @Html.DevExpress().Label(
      settings =>
           {
          settings.Text = "Bank";
          settings.AssociatedControlName = "BankName";
        }).GetHtml()

            @Html.DevExpress().TextBoxFor(
                    model => model.BankName,
                   settings =>
                        {
                       settings.ShowModelErrors = true;
                       settings.ControlStyle.CssClass = "form-control";
                       settings.ShowModelErrors = true;
                       settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       settings.Name = "BankName";
                       settings.ReadOnly = true;
                       settings.Properties.EnableClientSideAPI = true;
                   }).GetHtml()
        </div>


    </div>



    <div class="row btnpaddingrow10px">

        <div class="col-6 col-sm-2">

            @if (Session["UserRoleID"] != null)
            {

                if (RoleFeaturePermission.GetUserAddPermission(Session["UserRoleID"], appFeatureCode.appcodeFeesTransaction, apppermittionMode.appView))
                {
                    @Html.DevExpress().Button(
                    settings =>
                    {
                        settings.Name = "btnViewFeeReceipt";
                        settings.ControlStyle.CssClass = "button btnpaddingrow10px";
                        settings.Text = "View Fees Receipt";
                        settings.UseSubmitBehavior = false;
                        settings.ClientSideEvents.Click = "feesTransactionController.Onclickreceiptsearchshowpopup";
                    }).GetHtml()

                }


            }

        </div>

        <div class="col-6 col-sm-2">

            @if (Session["UserRoleID"] != null)
            {
                if (RoleFeaturePermission.GetUserAddPermission(Session["UserRoleID"], appFeatureCode.appcodeFeesTransaction, apppermittionMode.appInsert))
                {



                    @Html.DevExpress().Button(
                    settings =>
                    {
                        settings.Name = "btnSaveFeeReceipt";
                        settings.ControlStyle.CssClass = "button  btnpaddingrow10px";
                        settings.Text = "Pay Fees";
                        settings.UseSubmitBehavior = false;
                        settings.UseSubmitBehavior = true;
                    }).GetHtml()

                }

            }

        </div>

        <div class="col-6 col-sm-2">

            @if (Session["UserRoleID"] != null)
            {


                if (RoleFeaturePermission.GetUserAddPermission(Session["UserRoleID"], appFeatureCode.appcodeFeesTransaction, apppermittionMode.appView))
                {
                    @Html.DevExpress().Button(
                    settings =>
                    {
                        settings.Name = "btnEditFeeReceipt";
                        settings.ControlStyle.CssClass = "button btnpaddingrow10px";
                        settings.Text = "Edit Fees Receipt";
                        settings.UseSubmitBehavior = false;
                        settings.ClientSideEvents.Click = "feesTransactionController.Onclickreceiptsearchshowpopup";
                    }).GetHtml()

                }

            }

        </div>

        <div class="col-6 col-sm-2">

            @if (Session["UserRoleID"] != null)
            {
                if (RoleFeaturePermission.GetUserAddPermission(Session["UserRoleID"], appFeatureCode.appcodeFeesTransaction, apppermittionMode.appView))
                {
                    @Html.DevExpress().Button(
                    settings =>
                    {
                        settings.Name = "btnDeleteFeeReceipt";
                        settings.ControlStyle.CssClass = "button btnpaddingrow10px";
                        settings.Text = "Delete Fees Receipt";
                        settings.UseSubmitBehavior = false;
                        settings.ClientSideEvents.Click = "feesTransactionController.Onclickreceiptsearchshowpopup";
                    }).GetHtml()

                }


            }



        </div>

        <div class="col-sm-2">

                                @Html.DevExpress().CheckBoxFor(
                      model => model.ISSendSMS,
                      settings =>
                      {
                          settings.Name = "ISSendSMS";
                          settings.Checked = true;
                          settings.Text = "Send SMS";
                          //settings.ControlStyle.CssClass = "rolfloatleft";
                      }).GetHtml()




        </div>



    </div>

    <div style="clear:both"></div>

    <div class="divError">

        @Html.ValidationMessageFor(model => model.StudentName)
        @Html.ValidationMessageFor(model => model.FatherName)
    </div>




    <div class="row">
        @*//*****Invisible text box******@


        <div class="col-sm-12">

            @Html.DevExpress().TextBoxFor(
           model => model.ScholarNo,
           settings =>
           {
               settings.Name = "ScholarNo";
               settings.ControlStyle.CssClass = "form-control";
               //settings.ReadOnly = true;
               settings.ClientVisible = false;
           }).GetHtml()



            @Html.DevExpress().TextBoxFor(
           model => model.BankCode,
           settings =>
           {
               settings.Name = "BankCode";
               settings.ControlStyle.CssClass = "form-control";
               //settings.ReadOnly = true;
               settings.ClientVisible = false;
           }).GetHtml()

            @Html.DevExpress().TextBoxFor(
           model => model.BranchName,
           settings =>
           {
               settings.Name = "BranchName";
               settings.ControlStyle.CssClass = "form-control";
               //settings.ReadOnly = true;
               settings.ClientVisible = false;
           }).GetHtml()


            @Html.DevExpress().TextBoxFor(
            model => model.DiscountType,
            settings =>
            {
                settings.Name = "DiscountType";
                settings.ControlStyle.CssClass = "form-control";
                //settings.ReadOnly = true;
                settings.ClientVisible = false;
            }).GetHtml()



            @Html.DevExpress().TextBoxFor(
            model => model.DueAmount,
            settings =>
            {
                settings.Name = "DueAmount";
                settings.ControlStyle.CssClass = "form-control";
                settings.ReadOnly = true;
                settings.ClientVisible = false;
            }).GetHtml()

            @Html.DevExpress().TextBoxFor(
            model => model.DueTermId,
            settings =>
            {
                settings.Name = "DueTermId";
                settings.ControlStyle.CssClass = "form-control";
                settings.ReadOnly = true;
                settings.ClientVisible = false;
            }).GetHtml()

            @Html.DevExpress().TextBoxFor(
         model => model.OtherHead,
         settings =>
         {
             settings.Name = "OtherHead";
             settings.ControlStyle.CssClass = "form-control";
             settings.ReadOnly = true;
             settings.ClientVisible = false;
         }).GetHtml()

            @Html.DevExpress().TextBoxFor(
          model => model.CompID,
          settings =>
          {
              settings.Name = "CompID";
              settings.ControlStyle.CssClass = "form-control";
              settings.ReadOnly = true;
              settings.ClientVisible = false;
          }).GetHtml()

            @Html.DevExpress().TextBoxFor(
          model => model.BranchID,
          settings =>
          {
              settings.Name = "BranchID";
              settings.ControlStyle.CssClass = "form-control";
              settings.ReadOnly = true;
              settings.ClientVisible = false;
          }).GetHtml()

            @Html.DevExpress().TextBoxFor(
          model => model.SessionID,
          settings =>
          {
              settings.Name = "SessionID";
              settings.ControlStyle.CssClass = "form-control";
              settings.ReadOnly = true;
              settings.ClientVisible = false;
          }).GetHtml()

            @Html.DevExpress().TextBoxFor(
          model => model.USerID,
          settings =>
          {
              settings.Name = "USerID";
              settings.ControlStyle.CssClass = "form-control";
              settings.ReadOnly = true;
              settings.ClientVisible = false;
          }).GetHtml()

            @Html.DevExpress().TextBoxFor(
         model => model.Remark,
         settings =>
         {
             settings.Name = "Remark";
             settings.ControlStyle.CssClass = "form-control";
             //settings.ReadOnly = true;
             settings.ClientVisible = false;
         }).GetHtml()



        </div>
    </div>





































