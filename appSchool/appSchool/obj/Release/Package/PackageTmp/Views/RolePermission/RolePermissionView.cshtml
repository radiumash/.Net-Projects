@using appSchool.ViewModels
@using appSchool.Models
@using appSchool.Repositories


<div class="row">

    <div class="col-6 col-sm-2">
        @Html.DevExpress().Label(settingslbl =>
        {
            settingslbl.Name = "lb";
            settingslbl.ControlStyle.CssClass = "col-form-label-sm";
            settingslbl.Text = "Select Role Name";
        }).GetHtml()

        @Html.DevExpress().ComboBox(
          settingscbo =>
          {
              settingscbo.Name = "FromId";
              settingscbo.ControlStyle.CssClass = "form-control";
              settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
              settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
              settingscbo.Properties.TextField = "Name";
              settingscbo.Properties.ValueField = "Id";
              settingscbo.Properties.ClientSideEvents.SelectedIndexChanged = "rolePermissionController.SelectedUser";
            }
        ).BindList(new UnitOfWork().userRoleservices.GetUserRoleList(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()))).GetHtml()


    </div>


    <div class="col-6 col-sm-2">
        @Html.DevExpress().Label(settingslbl =>
        {
            settingslbl.Name = "lbModuleID";
            settingslbl.ControlStyle.CssClass = "col-form-label-sm";
            settingslbl.Text = "Select Module Name";
        }).GetHtml()

        @Html.DevExpress().ComboBox(
          settingscbo =>
          {
              settingscbo.Name = "ModuleId";
              settingscbo.ControlStyle.CssClass = "form-control";
              settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
              settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
              settingscbo.Properties.TextField = "Name";
              settingscbo.Properties.ValueField = "Id";
              settingscbo.Properties.ClientSideEvents.SelectedIndexChanged = "rolePermissionController.SelectedAppModule";
            }
        ).BindList(new UnitOfWork().appModuleservices.GetAppModuleList(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()))).GetHtml()


    </div>

    <div class="col-6 col-sm-2" id="FromFeatureIdTD">


        @{Html.RenderPartial("FromFeaturePartial"); }
    </div>
    @Html.DevExpress().Label(settingslbl =>
    {
        settingslbl.Name = "lblmessage";
        //settingslbl.ControlStyle.CssClass = "col-form-label-sm";
        settingslbl.Text = ".";
        settingslbl.ControlStyle.ForeColor = System.Drawing.Color.Red;
    }).GetHtml()

    @Html.DevExpress().TextBox(
                 settingscls =>
                 {
                     settingscls.Name = "txtUserName";
                     settingscls.ClientVisible = false;

                 }).GetHtml()

    @Html.DevExpress().TextBox(
        settingscls =>
        {
            settingscls.Name = "IDS";
            settingscls.ClientVisible = false;

        }).GetHtml()

    @Html.DevExpress().TextBox(
      settingscls =>
      {
          settingscls.Name = "RoleidS";
          settingscls.ClientVisible = false;

      }).GetHtml()


    @Html.DevExpress().TextBox(
    settingscls =>
    {
        settingscls.Name = "ModuleIdS";
        settingscls.ClientVisible = false;

    }).GetHtml()

    @Html.DevExpress().TextBox(
   settingscls =>
   {
       settingscls.Name = "FeatureIdS";
       settingscls.ClientVisible = false;

   }).GetHtml()

    @Html.DevExpress().TextBox(
    settingscls =>
    {
        settingscls.Name = "CanAddS";
        settingscls.ClientVisible = false;

    }).GetHtml()


    @Html.DevExpress().TextBox(
    settingscls =>
    {
        settingscls.Name = "CanEditS";
        settingscls.ClientVisible = false;

    }).GetHtml()

    @Html.DevExpress().TextBox(
      settingscls =>
      {
          settingscls.Name = "CanDeleteS";
          settingscls.ClientVisible = false;

      }).GetHtml()

    @Html.DevExpress().TextBox(
      settingscls =>
      {
          settingscls.Name = "CanViewS";
          settingscls.ClientVisible = false;

      }).GetHtml()




    <div class="col-6 col-sm-2">
        @Html.DevExpress().Button(
        settingsSend =>
        {
        settingsSend.Name = "btnUpdate";
        settingsSend.Width = 150;
        settingsSend.ControlStyle.CssClass = "btnpaddingrow15px";
        settingsSend.RenderMode = ButtonRenderMode.Button;
        settingsSend.Text = "Add Role Permission";
        settingsSend.ToolTip = "To load all the modules";
        settingsSend.Images.Image.IconID = "actions_refresh_16x16gray";
        settingsSend.ClientSideEvents.Click = "rolePermissionController.UpdateRolePermisttion";
        }).GetHtml()
    </div>
</div>









