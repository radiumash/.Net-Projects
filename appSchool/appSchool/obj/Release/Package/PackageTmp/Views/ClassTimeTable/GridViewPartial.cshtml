@using appSchool.Repositories
@using appSchool.ViewModels

@if (ViewData["ClassID"] == null)
{
    ViewData["ClassID"] = 0;
}

@{
    var gridView = Html.DevExpress().GridView(gridViewSettings =>
    {
        gridViewSettings.Name = "gridView";
        gridViewSettings.KeyFieldName = "ID";

        gridViewSettings.CallbackRouteValues = new { Controller = "ClassTimeTable", Action = "PartialGridClassTimeTable", pClassID = ViewData["ClassID"] };
        gridViewSettings.CustomActionRouteValues = new { Controller = "ClassTimeTable", Action = "GridViewCustomActionPartial" };
        gridViewSettings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ClassTimeTable",  Action = "UpdateTimetableAllotment", PClassID = ViewData["ClassID"] };

        gridViewSettings.EnablePagingGestures = AutoBoolean.False;

        gridViewSettings.ControlStyle.CssClass = "grid-view";
        gridViewSettings.Width = Unit.Percentage(100);

        gridViewSettings.Styles.Cell.Wrap = DefaultBoolean.False;
        gridViewSettings.Styles.PagerBottomPanel.CssClass = "pager";
        gridViewSettings.Styles.FocusedRow.CssClass = "focused";

        gridViewSettings.SettingsBehavior.AllowFocusedRow = true;
        gridViewSettings.SettingsBehavior.AllowSelectByRowClick = true;
        gridViewSettings.SettingsBehavior.AllowEllipsisInText = true;
        gridViewSettings.SettingsBehavior.AllowDragDrop = false;

        gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";

        gridViewSettings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
        gridViewSettings.SettingsEditing.EditFormColumnCount = 2;

        gridViewSettings.SettingsSearchPanel.CustomEditorName = "searchButtonEdit";

        gridViewSettings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
        gridViewSettings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        gridViewSettings.Settings.ShowHeaderFilterButton = true;

        gridViewSettings.SettingsPager.PageSize = 15;
        gridViewSettings.SettingsPager.EnableAdaptivity = true;
        gridViewSettings.SettingsPager.PageSizeItemSettings.Visible = true;

        gridViewSettings.SettingsExport.EnableClientSideExportAPI = true;
        gridViewSettings.SettingsExport.ExportSelectedRowsOnly = true;

        gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
        gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
        gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;

        gridViewSettings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        gridViewSettings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;
        gridViewSettings.EditFormLayoutProperties.ColCount = 2;
        gridViewSettings.EditFormLayoutProperties.Items.Add("ID").RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;
        gridViewSettings.EditFormLayoutProperties.Items.Add("ClassId").RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;
        gridViewSettings.EditFormLayoutProperties.Items.Add("ScheduleId").RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;
        gridViewSettings.EditFormLayoutProperties.Items.Add("ScheduleName").RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;
        gridViewSettings.EditFormLayoutProperties.Items.Add("Time").RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;
        gridViewSettings.EditFormLayoutProperties.Items.Add("MonFID").RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;
        gridViewSettings.EditFormLayoutProperties.Items.Add("MonSID").RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;


        gridViewSettings.EditFormLayoutProperties.Items.AddCommandItem(itemSettings =>
        {
            itemSettings.ColumnSpan = 2;
            itemSettings.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        });

        gridViewSettings.CommandColumn.Visible = true;
        gridViewSettings.CommandColumn.ShowSelectCheckbox = true;
        gridViewSettings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        gridViewSettings.CommandColumn.VisibleIndex = 0;
        gridViewSettings.CommandColumn.Width = Unit.Pixel(52);

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "ID";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(0);
            column.ShowInCustomizationForm = false;
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "ClassId";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(0);
            column.ShowInCustomizationForm = false;
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "ScheduleId";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(0);
            column.ShowInCustomizationForm = false;
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "ScheduleName";
            column.Caption = "Schedule Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "Time";
            column.Caption = "Time";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
        });


        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "MonFID";
            column.Caption = "Monday Faculty Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetTeachereList(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "FullName";
            comboBoxProperties.ValueField = "TeacherID";
            comboBoxProperties.ValueType = typeof(int);

            //if()
            //{
            //column.ReadOnly = true;
            //}
        });




        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "MonSID";
            column.Caption = "Monday Subject Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetSubjectlListForTimeTable(int.Parse(ViewData["ClassID"].ToString()), byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "SubjectNameL1";
            comboBoxProperties.ValueField = "IdL1";
            comboBoxProperties.ValueType = typeof(int);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "TueFID";
            column.Caption = "Tuesday Faculty Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetTeachereList(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "FullName";
            comboBoxProperties.ValueField = "TeacherID";
            comboBoxProperties.ValueType = typeof(int);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "TueSID";
            column.Caption = "Tuesday Subject Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetSubjectlListForTimeTable(int.Parse(ViewData["ClassID"].ToString()), byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "SubjectNameL1";
            comboBoxProperties.ValueField = "IdL1";
            comboBoxProperties.ValueType = typeof(int);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "WedFID";
            column.Caption = "Wedensday Faculty Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetTeachereList(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "FullName";
            comboBoxProperties.ValueField = "TeacherID";
            comboBoxProperties.ValueType = typeof(int);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "WedSID";
            column.Caption = "Wedensday Subject Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetSubjectlListForTimeTable(int.Parse(ViewData["ClassID"].ToString()), byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "SubjectNameL1";
            comboBoxProperties.ValueField = "IdL1";
            comboBoxProperties.ValueType = typeof(int);
        });


        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "ThuFID";
            column.Caption = "Thrusday Faculty Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetTeachereList(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "FullName";
            comboBoxProperties.ValueField = "TeacherID";
            comboBoxProperties.ValueType = typeof(int);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "ThuSID";
            column.Caption = "Thrusday Subject Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetSubjectlListForTimeTable(int.Parse(ViewData["ClassID"].ToString()), byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "SubjectNameL1";
            comboBoxProperties.ValueField = "IdL1";
            comboBoxProperties.ValueType = typeof(int);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "FriFID";
            column.Caption = "Friday Faculty Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetTeachereList(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "FullName";
            comboBoxProperties.ValueField = "TeacherID";
            comboBoxProperties.ValueType = typeof(int);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "FriSID";
            column.Caption = "Friday Subject Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetSubjectlListForTimeTable(int.Parse(ViewData["ClassID"].ToString()), byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "SubjectNameL1";
            comboBoxProperties.ValueField = "IdL1";
            comboBoxProperties.ValueType = typeof(int);


        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "SatFID";
            column.Caption = "Saturday Faculty Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetTeachereList(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "FullName";
            comboBoxProperties.ValueField = "TeacherID";
            comboBoxProperties.ValueType = typeof(int);


        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "SatSID";
            column.Caption = "Saturday Subject Name";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.vClassTimeTableRepository()).GetSubjectlListForTimeTable(int.Parse(ViewData["ClassID"].ToString()), byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "SubjectNameL1";
            comboBoxProperties.ValueField = "IdL1";
            comboBoxProperties.ValueType = typeof(int);
        });


        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "IsBreak";
            column.Caption = "IsBreak";
            column.ToolTip = "Click to Sort";
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.Visible = false;
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "DisplayOrder";
            column.Caption = "Display Order";
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(200);
        });

        gridViewSettings.ClientSideEvents.Init = "onGridViewInit";
        gridViewSettings.ClientSideEvents.SelectionChanged = "onGridViewSelectionChanged";
        gridViewSettings.ClientSideEvents.BeginCallback = "onGridViewBeginCallback";

        gridViewSettings.InitNewRow += (s, e) =>
        {
            //e.NewValues["ClassDescription"] = 1;
            //e.NewValues["DisplayOrder"] = 2;
            //e.NewValues["Status"] = 1;
            //e.NewValues["IsDraft"] = true;
            //e.NewValues["IsArchived"] = false;
        };
        gridViewSettings.CellEditorInitialize = (s, e) =>
        {
            ((ASPxEdit)e.Editor).ValidationSettings.Display = Display.Dynamic;
        };
    });
    if (ViewBag.GeneralError != null)
    {
        gridView.SetEditErrorText(ViewBag.GeneralError);
    }
}

@gridView.Bind(Model).GetHtml()