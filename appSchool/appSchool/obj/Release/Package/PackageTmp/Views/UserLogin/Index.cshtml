@using appSchool.Repositories
@using appSchool.ViewModels
@using appSchool.Controllers
@model ModelUserLogin

@{

    ViewBag.Title = "LogIn";
    Layout = "~/Views/Shared/_Layoutlogin.cshtml";
}
@section Head {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/SignInRegister.css")" />
    <script type="text/javascript" src="@Url.Content("~/Content/SignInRegister.js")"></script>
}
@if (ViewData["USerMessage"] == null)
{
    ViewData["USerMessage"] = "";
}

@if (ViewData["SchoolName"] == null)
{
    ViewData["SchoolName"] = "";
}

@if (ViewData["BranchCount"] == null)
{
    ViewData["BranchCount"] = "";
}

@{
    var SchoolName = ViewData["SchoolName"];
}


@{
    var UserMessage = ViewData["USerMessage"];
}


<div class="formLayout-verticalAlign">
    <div class="formLayout-container">

        <div style=" margin:0px; padding:0px">
            <img src="~/Content/Images/PNG/school_logo.jpg" height="64" width="64" style=" padding-left: 150px; padding-top: 8px" />
        </div>


        <h4 style="margin: 0px; padding: 0px; padding-top:4px; text-align:center; font-family: Arial; font-size: large; color: #ff6a00">@ViewData["SchoolName"]</h4>



        @using (Html.BeginForm("UserLoginCheck", "UserLogin"))
        {
            @Html.AntiForgeryToken()

            @Html.DevExpress().FormLayout(settings =>
       {
           settings.Name = "formLayout";
           settings.UseDefaultPaddings = false;
           settings.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
           settings.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;
           settings.Styles.LayoutGroup.Cell.Paddings.Padding = Unit.Pixel(0);
           settings.Styles.LayoutItem.Paddings.PaddingBottom = Unit.Pixel(8);

           var groupItem = settings.Items.AddGroupItem(i =>
           {
               i.ShowCaption = DefaultBoolean.False;
               i.GroupBoxDecoration = GroupBoxDecoration.None;
               i.Paddings.Padding = Unit.Pixel(16);

           });
           groupItem.Items.Add(m => m.UserName, i =>
           {
               //i.HelpText = "Please, enter your login name";
               i.NestedExtension().TextBox(s =>
               {
                   s.Width = Unit.Percentage(100);
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.Display = Display.Dynamic;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;

                   s.Properties.ClientSideEvents.Init = "function(s, e){ s.Focus(); }";
               });
           });

           groupItem.Items.Add(m => m.Password, i =>
           {
               i.NestedExtension().ButtonEdit(s =>
               {
                   s.Width = Unit.Percentage(100);
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.Display = Display.Dynamic;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;

                   s.Properties.Password = true;
                   s.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                   s.Properties.ClientSideEvents.ButtonClick = "onPasswordButtonEditButtonClick";

                   s.Properties.ButtonStyle.Border.BorderWidth = Unit.Pixel(0);
                   s.Properties.ButtonStyle.Width = Unit.Pixel(6);
                   s.Properties.ButtonStyle.CssClass = "eye-button";
                   s.Properties.ButtonStyle.HoverStyle.BackColor = System.Drawing.Color.Transparent;
                   s.Properties.ButtonStyle.PressedStyle.BackColor = System.Drawing.Color.Transparent;

                   s.SetButtonTemplateContent("<div></div>");
                   s.Properties.Buttons.Add();
               });
           });

           if (ViewData["BranchCount"].ToString() == "2")
           {
               groupItem.Items.Add(m => m.BranchID, i =>
               {
                   i.SetNestedContent(() =>
                   {
                       @Html.DevExpress().ComboBoxFor(
                      model => model.BranchID,
                              settingscbo =>
                              {
                                  settingscbo.Name = "BranchID";
                              //settingscbo.ControlStyle.CssClass = "editor1";
                              settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                                  settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
                                  settingscbo.Properties.TextField = "BranchName";
                                  settingscbo.Properties.ValueField = "BranchID";
                                  settingscbo.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                  settingscbo.SelectedIndex = 0;
                                  if (ViewData["BranchCount"].ToString() == "2")
                                  {
                                      settingscbo.ClientVisible = true;
                                  }
                                  else
                                  {
                                      settingscbo.ClientVisible = false;

                                  }

                              //settings.ShowModelErrors = true;
                              //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                          }
                          ).BindList(new UnitOfWork().branchService.Get()).GetHtml();


                   });
               });
               //groupItem.Items.Add(m => m.SessionID, i =>
           }
           else
           {
              

           }


           //{
           //    i.SetNestedContent(() =>
           //    {
           //        @Html.DevExpress().ComboBoxFor(
           //       model => model.SessionID,
           //               settingscbo =>
           //               {
           //                   settingscbo.Name = "SessionID";
           //                   //settingscbo.ControlStyle.CssClass = "editor1";
           //                   settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
           //                   settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
           //                   settingscbo.Properties.TextField = "SessionName";
           //                   settingscbo.Properties.ValueField = "SessionID";
           //                   settingscbo.Width = System.Web.UI.WebControls.Unit.Percentage(100);
           //                   settingscbo.SelectedIndex = 0;
           //                   //settings.ShowModelErrors = true;
           //                   //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
           //               }
           //           ).BindList(new UnitOfWork().academicYearService.Get()).GetHtml();


           //    });
           //});



           groupItem.Items.Add(itemSettings =>
           {
               itemSettings.ShowCaption = DefaultBoolean.False;
               itemSettings.Visible = ViewBag.GeneralError != null;
               itemSettings.SetNestedContent(() =>
               {
                   ViewContext.Writer.Write("<div class=\"formLayout-generalErrorText\">" + @ViewBag.GeneralError + "</div>");
               });
           });

           groupItem = settings.Items.AddGroupItem(i =>
           {
               i.ShowCaption = DefaultBoolean.False;
               i.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
               i.Paddings.PaddingTop = Unit.Pixel(13);
               i.Paddings.PaddingBottom = Unit.Pixel(13);
               i.GroupBoxStyle.CssClass = "formLayout-groupBox";
           });
           groupItem.Items.Add(i =>
           {
               i.ShowCaption = DefaultBoolean.False;
               i.HorizontalAlign = FormLayoutHorizontalAlign.Center;
               i.Paddings.Padding = Unit.Pixel(0);
               i.NestedExtension().Button(s =>
               {
                   s.Name = "SignInButton";
                   s.Width = Unit.Pixel(200);
                   s.Text = "Log In";
                   s.UseSubmitBehavior = true;
               });
           });

       }).GetHtml()
        }
    </div>
</div>
