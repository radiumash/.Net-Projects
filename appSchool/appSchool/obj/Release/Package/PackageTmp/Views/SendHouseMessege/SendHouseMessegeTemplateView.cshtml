@using appSchool.ViewModels
@using appSchool.Model
@using appSchool.Repositories


@*   @Html.DevExpress().Label(settings => {
    settings.Name = "lb";
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Text = "Select House";
}).GetHtml()*@

     
     @*   @Html.DevExpress().CheckBoxList(
            settings =>
            {
                settings.Name = "checkBoxList1";
                settings.Properties.ValueField = "Key";
                settings.Properties.TextField = "Value";
                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                settings.Height = System.Web.UI.WebControls.Unit.Percentage(100);
                
                settings.Properties.RepeatLayout =System.Web.UI.WebControls.RepeatLayout.Table;
                settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
                settings.Properties.RepeatColumns =1;
                settings.Properties.ClientSideEvents.SelectedIndexChanged = "sendHouseMessegeController.SelectionChangedForReligion";
            }).BindList(cCommon.GetHouseList()).GetHtml()*@

     @{
    var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "GridHouse";
            settings.KeyFieldName = "HouseID";
            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            settings.Height = System.Web.UI.WebControls.Unit.Percentage(100);

           
            settings.CallbackRouteValues = new { Controller = "SendHouseMessege", Action = "PartialHouseView" };
            settings.SettingsPopup.EditForm.ShowHeader = true;
            settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.Center;
            settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.Middle;
            settings.Styles.AlternatingRow.Enabled = DevExpress.Utils.DefaultBoolean.True;

           // settings.Columns.Add("StudentSessionID").EditFormSettings.ColumnSpan = 3;
            settings.CommandColumn.Visible = true;
            settings.CommandColumn.ShowSelectCheckbox = true;
            
            
            settings.CommandColumn.Width = 40;
            settings.CommandColumn.SetHeaderTemplateContent(c =>
            {
                Html.DevExpress().CheckBox(settingsCheckBox =>
                {
                    settingsCheckBox.Name = "cbSelectAllHouse";
                    settingsCheckBox.Text = "";
                    settingsCheckBox.Properties.ClientSideEvents.CheckedChanged = string.Format("function(s, e) {{ if(s.GetChecked()) {0}.SelectRows(); else {0}.UnselectRows(); }}", settings.Name);
                    settingsCheckBox.Checked = c.Grid.VisibleRowCount == c.Grid.Selection.Count;
                }).Render();
            });
            //settings.CommandColumn.Caption = "Select";
            settings.SettingsBehavior.AllowSelectByRowClick = false;
            settings.ClientSideEvents.SelectionChanged = "sendHouseMessegeController.SelectionChangedForHouse";
            settings.Columns.Add("HouseID").Visible=false;
            settings.Columns.Add("HouseName").Caption = "House Name"; ;
        
           // settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Bottom;
           // settings.SettingsPager.FirstPageButton.Visible = true;
           // settings.SettingsPager.LastPageButton.Visible = true;
           //// settings.SettingsPager.PageSizeItemSettings.Visible = true;
           //// settings.Settings.ShowFilterRow = true;
           ////  settings.Settings.ShowFilterRowMenu = true;
           // settings.SettingsPager.PageSize = 100;
            settings.CommandColumn.ShowClearFilterButton = true;
            settings.PreRender = (sender, e) => {
                //((MVCxGridView)sender).StartEdit(1);
            };

          
            settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
            
           // settings.SettingsBehavior.AllowFocusedRow = true;
          //  settings.ClientSideEvents.FocusedRowChanged = "sendMessegeController.RowSelectionChangeM";
        });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()














   @*   @Html.DevExpress().TextBox(
   
        settings =>
        {
         settings.Name = "txtHouse";
         settings.ClientVisible = true ;
            
        }).GetHtml()*@

   
   