@using appSchool.Repositories
@using appSchool.ViewModels

@if (ViewData["ClassID"] == null)
{
    ViewData["ClassID"] = 0;
}
@if (ViewData["ClassesSetupID"] == null)
{
    ViewData["ClassesSetupID"] = 0;
}




@{ var grid = Html.DevExpress().GridView(
                      settings =>
                      {
                          settings.Name = "gridView"; ////name change this propert to new
                 settings.KeyFieldName = "StudentSessionID";
                          settings.Width = System.Web.UI.WebControls.Unit.Percentage(99);

                          settings.CommandColumn.Visible = true;
                          settings.CommandColumn.Width = System.Web.UI.WebControls.Unit.Pixel(40);

                          settings.CommandColumn.ShowClearFilterButton = true;

                          settings.CallbackRouteValues = new { Controller = "StudentPromoteDemote", Action = "PartialStudentSessionView", mClassesID = ViewData["ClassID"], mClassesSetupID = ViewData["ClassesSetupID"] };


                          settings.ControlStyle.CssClass = "grid-view"; //add this propert to new
                 settings.Styles.PagerBottomPanel.CssClass = "pager";
                          settings.Styles.FocusedRow.CssClass = "focused";
                          settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
                          settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
                          settings.SettingsPager.PageSize = 10;
                          settings.SettingsBehavior.AllowFocusedRow = true;
                          settings.Settings.ShowHeaderFilterButton = true;

                          settings.ClientSideEvents.FocusedRowChanged = "studentPromoteDemoteController.RowSelectionChange";

                          settings.Columns.Add("StudentSessionID").Visible = false;
                          settings.Columns.Add("StudentID").Visible = false;
                          settings.Columns.Add(column =>
                          {
                              column.FieldName = "EnrollmentNo";
                              column.Caption = "EnrollmentNo";
                              column.ColumnType = MVCxGridViewColumnType.TextBox;
                              column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
                              column.ReadOnly = true;
                          });

                          settings.Columns.Add(column =>
                          {
                              column.FieldName = "FullName";
                              column.Caption = "FullName";
                              column.ColumnType = MVCxGridViewColumnType.TextBox;
                              column.Width = System.Web.UI.WebControls.Unit.Pixel(250);
                              column.ReadOnly = true;
                          });
                          settings.Columns.Add(column =>
                          {
                              column.FieldName = "FatherName";
                              column.Caption = "Father Name";
                              column.ColumnType = MVCxGridViewColumnType.TextBox;
                              column.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                              column.ReadOnly = true;
                          });
                 //settings.Columns.Add("FullName").ReadOnly = true;
                 //settings.Columns.Add("FatherName").ReadOnly = true;


                 settings.Columns.Add(column =>
                  {
                              column.FieldName = "ClassSetupID";
                              column.Caption = "Class";
                              column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
                     //column.EditFormSettings.ColumnSpan = 1;

                     column.ColumnType = MVCxGridViewColumnType.ComboBox;

                              var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
                              comboBoxProperties.DataSource = (new appSchool.Repositories.ClassSetupRepository()).GetAllClassNameByClassID(int.Parse(ViewData["ClassID"].ToString()));
                              comboBoxProperties.TextField = "ClassDescription";
                              comboBoxProperties.ValueField = "ClassSetupID";
                              comboBoxProperties.ValueType = typeof(int);
                          });

                          settings.Columns.Add(column =>
                          {
                              column.FieldName = "DateOfBirth";
                              column.Caption = "DateOfBirth";
                              column.ColumnType = MVCxGridViewColumnType.TextBox;
                              column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
                              column.Width = System.Web.UI.WebControls.Unit.Pixel(180);
                              column.ReadOnly = true;
                          });

                          settings.Columns.Add(column =>
                          {
                              column.FieldName = "SMSMobileNo";
                              column.Caption = "MobileNo";
                              column.ColumnType = MVCxGridViewColumnType.TextBox;
                              column.Width = System.Web.UI.WebControls.Unit.Pixel(180);
                              column.ReadOnly = true;
                          });


                      });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    } }
@grid.Bind(Model).GetHtml()


