@using appSchool.Repositories
@using appSchool.ViewModels

@model modelStudentPersonalInfo

@Html.Hidden("StudentID")

 

<div id="form_edit_controls" style="width:100%;height:auto">
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.EnrollmentNo,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Enrollment No";
                settings.AssociatedControlName = "EnrollmentNo";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model=> model.EnrollmentNo,
            settings => {
                settings.Name = "EnrollmentNo";    
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.MaskSettings.Mask = "(AAA)-000-0000";
                // settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
                settings.ReadOnly = true;
                
                
            }).GetHtml()
    
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.EnrollmentDate,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Enrollment Date";
                settings.AssociatedControlName = "EnrollmentDate";
                
            }
        ).GetHtml()
      @Html.DevExpress().DateEditFor(
                model=> model.EnrollmentDate,
                settings => {
                    settings.Name = "EnrollmentDate";
                    settings.ControlStyle.CssClass = "editor";
                    settings.Properties.NullText = "dd MMM yyyy";
                    settings.Properties.EditFormat = EditFormat.Custom;
                    settings.Properties.MaxDate = DateTime.Now;
                    settings.Properties.EditFormatString = "dd MMM yyyy";

                    //settings.ShowModelErrors = true;
                    //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    settings.ReadOnly = true;
                    //settings.Enabled = false;
                
}
            ).GetHtml()
</div>
<div class="line4" >

    @Html.DevExpress().LabelFor(
            model=> model.FirstName,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "First Name";
                settings.AssociatedControlName = "FirstName";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model=> model.FirstName,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()
  
    </div>




<div class="line4" >

    @Html.DevExpress().LabelFor(
            model=> model.LastName,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Last Name";
                settings.AssociatedControlName = "LastName";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.LastName,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()

    </div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.DateOfBirth,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Date of Birth";
                settings.AssociatedControlName = "DateofBirth";
            }
        ).GetHtml()
    @Html.DevExpress().DateEditFor(
            model => model.DateOfBirth,
            settings => {
                settings.Name = "DateofBirth";
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.NullText = "dd MMM yyyy";
                settings.Properties.EditFormat = EditFormat.Custom;
                settings.Properties.EditFormatString = "dd MMM yyyy";
                settings.Properties.MaxDate = DateTime.Now;
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            }).GetHtml()
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.BloodGroup,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Blood Group";
                settings.AssociatedControlName = "BloodGroup";
            }
        ).GetHtml()

    @Html.DevExpress().ComboBoxFor(
            model=> model.BloodGroup,
                    settings => {
                        settings.Name = "BloodGroup";
                        settings.ControlStyle.CssClass = "editor";
                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                        settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                        settings.Properties.TextField = "Value";
                        settings.Properties.ValueField = "Key";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    }
                ).BindList(cCommon.GetBloodGroupList()).GetHtml()
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.Gender,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Gender";
                settings.AssociatedControlName = "Gender";
            }
        ).GetHtml()
     @Html.DevExpress().ComboBoxFor(
            model=> model.Gender,
                    settings => {
                        settings.Name = "Gender";
                        settings.ControlStyle.CssClass = "editor";
                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                        settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                        settings.Properties.TextField = "Value";
                        settings.Properties.ValueField = "Key";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    }
                ).BindList(cCommon.GetGenderList()).GetHtml()
   
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.Religion,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Religion";
                settings.AssociatedControlName = "Religion";
            }
        ).GetHtml()
    @Html.DevExpress().ComboBoxFor(
            model=> model.Religion,
                    settings => {
                        settings.Name = "Religion";
                        settings.ControlStyle.CssClass = "editor";
                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                        settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                        settings.Properties.TextField = "Value";
                        settings.Properties.ValueField = "Key";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    }
                ).BindList(cCommon.GetReligionList()).GetHtml()
   @* @Html.DevExpress().TextBoxFor(
            model => model.Religion,
            settings => {
                settings.ControlStyle.CssClass = "editor";
            }).GetHtml()*@
    
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.Caste,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Caste";
                settings.AssociatedControlName = "Caste";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.Caste,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            }).GetHtml()
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.Nationality,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Nationality";
                settings.AssociatedControlName = "Nationality";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.Nationality,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            }).GetHtml()
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.City,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "City";
                settings.AssociatedControlName = "City";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.City,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            }).GetHtml()
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.LocalAddress,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Local Address";
                settings.AssociatedControlName = "LocalAddress";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.LocalAddress,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            }).GetHtml()
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.HomePhoneNo,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Phone No (Home)";
                settings.AssociatedControlName = "HomePhoneNo";
                
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.HomePhoneNo,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               // settings.Properties.MaskSettings.Mask = "(0000) 000-0000";
               // settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
            }).GetHtml()
</div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.SMSMobileNo,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "SMS Mobile No";
                settings.AssociatedControlName = "SMSMobileNo";
                
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.SMSMobileNo,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
              //  settings.Properties.MaskSettings.Mask = " 00000-00000";
                settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
            }).GetHtml()
   
</div>
     <div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.EnableSMSFeature,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Enable SMS";
                settings.AssociatedControlName = "EnableSMSFeature";
                
            }
        ).GetHtml()
     @Html.DevExpress().CheckBoxFor(
            model => model.EnableSMSFeature ,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                settings.Checked = true;
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               
            }).GetHtml()
        </div>
<div class="line4" >
    @Html.DevExpress().LabelFor(
            model=> model.MotherTounge,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Mother Tounge";
                settings.AssociatedControlName = "MotherTounge";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.MotherTounge,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            }).GetHtml()
    

</div>
<div class="line4">
 @*   <input type="file" name="FileUpload" />*@
</div>
</div>
<div style="clear:both"></div>

<div class="lineFooter" style="height:300px" >
   <div class="divSubmit">
       
       @Html.DevExpress().Button(
        settings => {
            settings.Name = "btnUpdatePersonalInfo";
            settings.ControlStyle.CssClass = "button";
            settings.Text = "Update";
            settings.UseSubmitBehavior = true;
            settings.Images.Image.IconID = IconID.SaveSave16x16;
        }).GetHtml()
       
    </div>
    <div class="divError" >

        @Html.ValidationMessageFor(model=> model.FirstName) 
        @Html.ValidationMessageFor(model=> model.LastName)  
    </div>

     
</div>
