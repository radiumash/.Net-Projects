@using appSchool.Repositories
@using appSchool.ViewModels

@model modelStudentPersonalInfo

@Html.Hidden("StudentID")

@section Head {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/bootstrap.css")" />

}

    <div class="row">
    <div class="col-sm-12">
        @Html.DevExpress().Image(settingsimg =>
                  {
                      settingsimg.Name = "img1";

                      if (Model.AppImageName != null)
                      {
                          if (File.Exists(Server.MapPath("~//Images/Students/" + Model.AppImageName)))
                              settingsimg.ImageUrl = @Url.Content("~//Images/Students/" + Model.AppImageName);
                          else
                              settingsimg.ImageUrl = @Url.Content("~//Images/Students/" + "blankstudent.png");
                      }
                      else
                          settingsimg.ImageUrl = @Url.Content("~//Images/Students/" + "blankstudent.png");
                      settingsimg.ControlStyle.CssClass = "editor";
                      settingsimg.Height = System.Web.UI.WebControls.Unit.Pixel(120);
                      settingsimg.Width = System.Web.UI.WebControls.Unit.Pixel(100);
                      settingsimg.ControlStyle.Border.BorderWidth = 1;
                      settingsimg.ControlStyle.Border.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
                      settingsimg.ControlStyle.Border.BorderColor = System.Drawing.Color.Black;
                  }).GetHtml()
    </div>
    </div>

    <div class="row">

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.EnrollmentNo,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "Enrollment No";
                   settings.AssociatedControlName = "EnrollmentNo";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
            model => model.EnrollmentNo,
            settings =>
                 {
                settings.Name = "EnrollmentNo";
                settings.ControlStyle.CssClass = "form-control";
                //settings.Properties.MaskSettings.Mask = "(AAA)-000-0000";
                // settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
                settings.ReadOnly = true;


            }).GetHtml()



        </div>
        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.EnrollmentDate,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "Enrollment Date";
                   settings.AssociatedControlName = "EnrollmentDate";
               }
           ).GetHtml()
            @Html.DevExpress().DateEditFor(
                 model => model.EnrollmentDate,
                 settings =>
                 {
                     settings.Name = "EnrollmentDate";
                     settings.ControlStyle.CssClass = "form-control";
                     settings.Properties.NullText = "dd MMM yyyy";
                     settings.Properties.EditFormat = EditFormat.Custom;
                     settings.Properties.MaxDate = DateTime.Now;
                     settings.Properties.EditFormatString = "dd MMM yyyy";

                     //settings.ShowModelErrors = true;
                     //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     settings.ReadOnly = true;
                     //settings.Enabled = false;

                 }).GetHtml()

        </div>

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.FirstName,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "FirstName";
                   settings.AssociatedControlName = "FirstName";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
              model => model.FirstName,
              settings =>
                   {
                  settings.ControlStyle.CssClass = "form-control";
                  //settings.ShowModelErrors = true;
                  //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  settings.ReadOnly = true;

              }).GetHtml()


        </div>


    </div>

    <div class="row">

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.LastName,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "Enrollment No";
                   settings.AssociatedControlName = "LastName";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
            model => model.EnrollmentNo,
            settings =>
                 {
                settings.Name = "LastName";
                settings.ControlStyle.CssClass = "form-control";
                //settings.Properties.MaskSettings.Mask = "(AAA)-000-0000";
                // settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
                settings.ReadOnly = true;


            }).GetHtml()



        </div>
        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.DateOfBirth,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "Enrollment Date";
                   settings.AssociatedControlName = "DateOfBirth";
               }
           ).GetHtml()
            @Html.DevExpress().DateEditFor(
                 model => model.DateOfBirth,
                 settings =>
                 {
                     settings.Name = "DateofBirth";
                     settings.ControlStyle.CssClass = "form-control";
                     settings.Properties.NullText = "dd MMM yyyy";
                     settings.Properties.EditFormat = EditFormat.Custom;
                     settings.Properties.EditFormatString = "dd MMM yyyy";
                     settings.Properties.MaxDate = DateTime.Now;
                     settings.ShowModelErrors = true;
                     settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;

                 }).GetHtml()

        </div>

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.BloodGroup,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "BloodGroup";
                   settings.AssociatedControlName = "BloodGroup";
               }
           ).GetHtml()
            @Html.DevExpress().ComboBoxFor(
                model => model.BloodGroup,
                        settings =>
                        {
                            settings.Name = "BloodGroup";
                            settings.ControlStyle.CssClass = "form-control";
                            settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                            settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                            settings.Properties.TextField = "Value";
                            settings.Properties.ValueField = "Key";
                            //settings.ShowModelErrors = true;
                            //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        }
                    ).BindList(cCommon.GetBloodGroupList()).GetHtml()



        </div>


    </div>

    <div class="row">

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.Gender,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "Gender";
                   settings.AssociatedControlName = "Gender";
               }
           ).GetHtml()
            @Html.DevExpress().ComboBoxFor(
                 model => model.Gender,
                         settings =>
                         {
                             settings.Name = "Gender";
                             settings.ControlStyle.CssClass = "form-control";
                             settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                             settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                             settings.Properties.TextField = "Value";
                             settings.Properties.ValueField = "Key";
                             //settings.ShowModelErrors = true;
                             //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                         }
                     ).BindList(cCommon.GetGenderList()).GetHtml()



        </div>


        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.Religion,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "Enrollment Date";
                   settings.AssociatedControlName = "Religion";
               }
           ).GetHtml()
            @Html.DevExpress().ComboBoxFor(
               model => model.Religion,
                       settings =>
                       {
                           settings.Name = "Religion";
                           settings.ControlStyle.CssClass = "form-control";
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                           settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                           settings.Properties.TextField = "Value";
                           settings.Properties.ValueField = "Key";
                           //settings.ShowModelErrors = true;
                           //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       }
                   ).BindList(cCommon.GetReligionList()).GetHtml()

        </div>

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.Caste,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "FirstName";
                   settings.AssociatedControlName = "Caste";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                 model => model.Caste,
                 settings =>
                 {
                     settings.ControlStyle.CssClass = "form-control";
                     //settings.ShowModelErrors = true;
                     //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 }).GetHtml()



        </div>


    </div>

    <div class="row">

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.Nationality,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "Nationality";
                   settings.AssociatedControlName = "Nationality";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                 model => model.Nationality,
                 settings =>
                      {
                     settings.ControlStyle.CssClass = "form-control";
                     //settings.ShowModelErrors = true;
                     //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 }).GetHtml()



        </div>


        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.City,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "City";
                   settings.AssociatedControlName = "City";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                 model => model.City,
                 settings =>
                      {
                     settings.ControlStyle.CssClass = "form-control";
                     //settings.ShowModelErrors = true;
                     //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 }).GetHtml()



        </div>

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.LocalAddress,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "LocalAddress";
                   settings.AssociatedControlName = "LocalAddress";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                 model => model.LocalAddress,
                 settings =>
                      {
                     settings.ControlStyle.CssClass = "form-control";
                     //settings.ShowModelErrors = true;
                     //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 }).GetHtml()



        </div>


    </div>

    <div class="row">

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.HomePhoneNo,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "HomePhoneNo";
                   settings.AssociatedControlName = "HomePhoneNo";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                 model => model.HomePhoneNo,
                 settings =>
                      {
                     settings.ControlStyle.CssClass = "form-control";
                     //settings.ShowModelErrors = true;
                     //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 }).GetHtml()



        </div>
        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.SMSMobileNo,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "SMSMobileNo";
                   settings.AssociatedControlName = "SMSMobileNo";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                 model => model.SMSMobileNo,
                 settings =>
                      {
                     settings.ControlStyle.CssClass = "form-control";
                     //settings.ShowModelErrors = true;
                     //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 }).GetHtml()



        </div>
        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.EnableSMSFeature,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "EnableSMSFeature";
                   settings.AssociatedControlName = "EnableSMSFeature";
               }
           ).GetHtml()
            @Html.DevExpress().CheckBoxFor(
                 model => model.EnableSMSFeature,
                 settings =>
                      {
                     settings.ControlStyle.CssClass = "form-control";
                     settings.Checked = true;
                     //settings.ShowModelErrors = true;
                     //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;

            }).GetHtml()



        </div>


    </div>

    <div class="row">

        <div class="col-sm-4">

            @Html.DevExpress().LabelFor(
               model => model.MotherTounge,
               settings =>
               {
                   settings.ControlStyle.CssClass = "col-form-label-sm";
                   settings.Text = "MotherTounge";
                   settings.AssociatedControlName = "MotherTounge";
               }
           ).GetHtml()
            @Html.DevExpress().TextBoxFor(
                 model => model.MotherTounge,
                 settings =>
                      {
                     settings.ControlStyle.CssClass = "form-control";
                     //settings.ShowModelErrors = true;
                     //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 }).GetHtml()



        </div>

        <div class="col-sm-4">

            @Html.DevExpress().Button(
                settings =>
                     {
                        settings.Name = "btnUpdatePersonalInfo";
                        settings.ControlStyle.CssClass = "btnpaddingrow10px";
                        settings.Text = "Update";
                        settings.UseSubmitBehavior = true;
                        settings.Images.Image.IconID = IconID.SaveSave16x16;
                }).GetHtml()

        </div>

        <div class="divError">

            @Html.ValidationMessageFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

    </div>

      