@using appSchool.Repositories
@using appSchool.ViewModels

@if (ViewData["ClassIDForSessionTransfer"] == null)
{
    ViewData["ClassIDForSessionTransfer"] = 0;
}

@if (ViewData["SectionIDForSessionTransfer"] == null)
{
    ViewData["SectionIDForSessionTransfer"] = 0;
}


@{
    var gridView = Html.DevExpress().GridView(gridViewSettings =>
    {
        gridViewSettings.Name = "GridSessionTransfer";
        gridViewSettings.KeyFieldName = "StudentSessionID";

        gridViewSettings.CallbackRouteValues = new { Controller = "SessionTransfer", Action = "PartialSessionTransferView", PclassID = ViewData["ClassIDForSessionTransfer"], PSectionID = ViewData["SectionIDForSessionTransfer"] };

        gridViewSettings.EnablePagingGestures = AutoBoolean.False;

        gridViewSettings.ControlStyle.CssClass = "grid-view";
        gridViewSettings.Width = Unit.Percentage(100);

        gridViewSettings.Styles.Cell.Wrap = DefaultBoolean.False;
        gridViewSettings.Styles.PagerBottomPanel.CssClass = "pager";
        gridViewSettings.Styles.FocusedRow.CssClass = "focused";

        gridViewSettings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
        gridViewSettings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        gridViewSettings.Settings.ShowHeaderFilterButton = true;
        gridViewSettings.Styles.AlternatingRow.Enabled = DevExpress.Utils.DefaultBoolean.True;

        gridViewSettings.SettingsPager.PageSize = 15;
        gridViewSettings.SettingsPager.EnableAdaptivity = true;
        gridViewSettings.SettingsPager.PageSizeItemSettings.Visible = true;

        gridViewSettings.SettingsExport.EnableClientSideExportAPI = true;
        gridViewSettings.SettingsExport.ExportSelectedRowsOnly = true;

        gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
        gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
        gridViewSettings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;


        gridViewSettings.CommandColumn.Visible = true;
        gridViewSettings.CommandColumn.ShowSelectCheckbox = true;
        gridViewSettings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        gridViewSettings.CommandColumn.VisibleIndex = 0;
        gridViewSettings.CommandColumn.Width = Unit.Pixel(52);

        gridViewSettings.Columns.Add("StudentSessionID").Visible = false;
        gridViewSettings.Columns.Add("StudentID").Visible = false;
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "EnrollmentNo";
            column.Caption = "EnrollmentNo";
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(120);
        });
        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "FullName";
            column.Caption = "Name";
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(230);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "FatherName";
            column.Caption = "Father Name";
            column.ToolTip = "Click to Sort";
            column.ReadOnly = true;
            column.Width = Unit.Pixel(210);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "ClassSetupID";
            column.Caption = "ClassDescription";
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(80);

            column.ColumnType = MVCxGridViewColumnType.ComboBox;

            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.ClassSetupRepository()).GetAllClassNameByClassID(int.Parse(ViewData["ClassIDForSessionTransfer"].ToString()));
            comboBoxProperties.TextField = "ClassDescription";
            comboBoxProperties.ValueField = "ClassSetupID";
            comboBoxProperties.ValueType = typeof(int);
        });


        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "HouseID";
            column.Caption = "HouseName";
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(80);

            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.HouseRepository()).GetHouseList(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "HouseName";
            comboBoxProperties.ValueField = "HouseID";

            comboBoxProperties.ValueType = typeof(int);
        });


        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "HouseColor";
            column.Caption = "Color";
            column.ToolTip = "Click to Sort";
            column.ReadOnly = true;
            column.Width = Unit.Pixel(210);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "DateOfBirth";
            column.Caption = "Date Of Birth";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;

            var dateProperties = column.PropertiesEdit as DateEditProperties;
            dateProperties.UseMaskBehavior = true;
            dateProperties.EditFormat = EditFormat.Custom;
            dateProperties.EditFormatString = "MMMM dd, yyyy";
            dateProperties.DisplayFormatString = "MMMM dd, yyyy";
            dateProperties.MaxDate = DateTime.Now;
            column.Width = System.Web.UI.WebControls.Unit.Pixel(150);
            //column.EditFormSettings.ColumnSpan = 1;

        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "BusID";
            column.Caption = "BusNo";
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(80);

            column.Visible = SchoolSetupStaticClass._BusFacility;

            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = (new appSchool.Repositories.BusMasterRepository()).GetBusMasterGridData(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()));
            comboBoxProperties.TextField = "BusNo";
            comboBoxProperties.ValueField = "BusID";
            comboBoxProperties.ValueType = typeof(int);
        });


        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "SMSInHindi";
            column.Caption = "SMS In Hindi";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(120);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "IsNewStudent";
            column.Caption = "IsNewStudent";
            column.Visible = SchoolSetupStaticClass._BusFacility;
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(120);
        });

        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "IsNewStudent";
            column.Caption = "IsNewStudent";
            column.Visible = SchoolSetupStaticClass._BusFacility;
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(120);
        });


        gridViewSettings.Columns.Add(column =>
        {
            column.FieldName = "IsNewStudent";
            column.Caption = "IsNewStudent";
            column.Visible = SchoolSetupStaticClass._BusFacility;
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.ToolTip = "Click to Sort";
            column.Width = Unit.Pixel(120);
        });


        gridViewSettings.HtmlDataCellPrepared = (sender, e) =>
        {
            //  int a = -1;
            if (e.DataColumn.FieldName == "HouseColor")
            {

                if (e.CellValue != null)
                {
                    e.Cell.BackColor = System.Drawing.Color.FromArgb(Convert.ToInt32(e.CellValue));
                    //SchoolSetupStaticClass._HouseColor = Convert.ToInt32(e.CellValue);
                    e.Cell.ForeColor = System.Drawing.Color.Black;
                    e.Cell.Text = System.Drawing.ColorTranslator.ToHtml(System.Drawing.Color.FromArgb(Convert.ToInt32(e.CellValue)));
                    //e.Cell.Text = string.Empty;

                }
            }
        };

        gridViewSettings.ClientSideEvents.SelectionChanged = "sessionTransferController.SelectionChanged";
        //gridViewSettings.ClientSideEvents.Init = "onGridViewInit";
        //gridViewSettings.ClientSideEvents.SelectionChanged = "onGridViewSelectionChanged";
        //gridViewSettings.ClientSideEvents.BeginCallback = "onGridViewBeginCallback";


        gridViewSettings.CellEditorInitialize = (s, e) =>
        {
            ((ASPxEdit)e.Editor).ValidationSettings.Display = Display.Dynamic;
        };


    });
    if (ViewBag.GeneralError != null)
    {
        gridView.SetEditErrorText(ViewBag.GeneralError);
    }
}

@gridView.Bind(Model).GetHtml()