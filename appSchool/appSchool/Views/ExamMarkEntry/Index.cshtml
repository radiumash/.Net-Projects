@using appSchool.ViewModels
@using appSchool.Model
@using appSchool.Repositories

@{
    ViewBag.Title = "Exam Mark Entry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@section Head {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/GridView.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/bootstrap.css")" />
    <script type="text/javascript" src="@Url.Content("~/Content/GridView.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/jsControllers/examMarkEntryController.js")"></script>

}


@section LeftPanelContent {

    @{Html.RenderAction("ReturnLeftPanelView", "LeftAndRightPanel", new { moduleid = (int)appModule.appExamsManager });}


}

@section RightPanelContent {
    @{Html.RenderAction("ReturnRightPanelView", "LeftAndRightPanel");}

}

<script type="text/javascript">
    var currentColumnName;
    function OnBatchEditStartEditing(s, e) {

        currentColumnName = e.focusedColumn.fieldName;
        //alert(currentColumnName);
    }

    function OnBatchEditEndEditing(s, e) {

        window.setTimeout(function () {
            var IsAbsent = s.batchEditApi.GetCellValue(e.visibleIndex, "IsAbsent");
            var obtmark = s.batchEditApi.GetCellValue(e.visibleIndex, "ObtainMark");
            if (IsAbsent != null) {
                if (IsAbsent == true) {
                    s.batchEditApi.SetCellValue(e.visibleIndex, "ObtainMark", "Abs");
                }
                else {
                    if (obtmark == "Abs") {
                        s.batchEditApi.SetCellValue(e.visibleIndex, "ObtainMark", 0);
                    }
                    if (obtmark == null || obtmark == "") {
                        s.batchEditApi.SetCellValue(e.visibleIndex, "ObtainMark", 0);
                    }

                    if (!obtmark.match(/\S/)) {
                        s.batchEditApi.SetCellValue(e.visibleIndex, "ObtainMark", 0);
                        alert('Empty value is not allowed');
                        return true;
                    }

                }
            }


            var MinMark = s.batchEditApi.GetCellValue(e.visibleIndex, "MinMark");
            var MaxMark = s.batchEditApi.GetCellValue(e.visibleIndex, "MaxMark");
            if (IsAbsent == false) {
                if (isNaN(obtmark)) {
                    alert("Enter valid value.");
                    s.batchEditApi.SetCellValue(e.visibleIndex, "ObtainMark", 0);
                }
            }
            if (obtmark > MaxMark) {
                alert("Obtain Mark is greater than max mark.");
                s.batchEditApi.SetCellValue(e.visibleIndex, "ObtainMark", 0);
            }



        }, 10);
    }
</script>



<div class="row">


    <div class="col-sm-3">

        @Html.DevExpress().Label(settingslbl =>
        {
            settingslbl.Name = "lblClassID";
            settingslbl.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            settingslbl.Text = "Select Class";
        }).GetHtml()

        @Html.DevExpress().ComboBox(
        settingscbo =>
           {
              settingscbo.Name = "ClassID";
              settingscbo.ControlStyle.CssClass = "editor";
              settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
              settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
              settingscbo.Width = System.Web.UI.WebControls.Unit.Pixel(200);
              settingscbo.Properties.TextField = "ClassName";
              settingscbo.Properties.ValueField = "ClassID";
              //settingscbo.ShowModelErrors = true;
              //settingscbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
              settingscbo.Properties.ClientSideEvents.SelectedIndexChanged = "examMarkEntryController.SelectedClass";
            }).BindList(new UnitOfWork().ClassService.GetClassListAscending(byte.Parse(Session["CompID"].ToString()), byte.Parse(Session["BranchID"].ToString()))).GetHtml()

    </div>

    <div class="col-sm-3">
        @Html.DevExpress().Label(settingslbl =>
        {
            settingslbl.Name = "lblClassSetupID";
            settingslbl.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            settingslbl.Text = "Select Section";
        }).GetHtml()

        @Html.DevExpress().ComboBox(
        settingscbo =>
              {
                  settingscbo.Name = "ClassSetupID";
                  settingscbo.ControlStyle.CssClass = "editor";
                  settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                  settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
                  settingscbo.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                  settingscbo.Properties.TextField = "ClassDescription";
                  settingscbo.Properties.ValueField = "ClassSetupID";
                  settingscbo.Properties.EnableClientSideAPI = true;
              }
          ).GetHtml()

    </div>

    <div class="col-sm-3">

        @Html.DevExpress().Label(settingslbl =>
                {
                    settingslbl.Name = "lblExamID";
                    settingslbl.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settingslbl.Text = "Select Exam";
                }).GetHtml()

        @Html.DevExpress().ComboBox(
        settingscbo =>
        {
            settingscbo.Name = "ExamID";
            settingscbo.ControlStyle.CssClass = "editor";
            settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
            settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
            settingscbo.Width = System.Web.UI.WebControls.Unit.Pixel(200);
            settingscbo.Properties.TextField = "ExamName";
            settingscbo.Properties.ValueField = "ExamID";
            settingscbo.Properties.EnableClientSideAPI = true;

            }
        ).GetHtml()
    </div>

    <div class="col-sm-3">

        @Html.DevExpress().Label(settingslbl =>
                {
                    settingslbl.Name = "lblSubject";
                    settingslbl.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settingslbl.Text = "Select Subject One";
                }).GetHtml()

        @Html.DevExpress().ComboBox(
          settingscbo =>
          {
              settingscbo.Name = "SubjectID";
              settingscbo.ControlStyle.CssClass = "editor";
              settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
              settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
              settingscbo.Width = System.Web.UI.WebControls.Unit.Pixel(200);
              settingscbo.Properties.TextField = "SubjectName";
              settingscbo.Properties.ValueField = "SubjectID";
              settingscbo.Properties.EnableClientSideAPI = true;
              //settingscbo.ShowModelErrors = true;
              //settingscbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
              settingscbo.Properties.ClientSideEvents.SelectedIndexChanged = "examMarkEntryController.SelectedSubjectLevelOne";
          }).GetHtml()

    </div>

   

</div>

<div class="row">

    <div class="col-sm-3">

        @Html.DevExpress().Label(settingslbl =>
                {
                    settingslbl.Name = "lblSubject2";
                    settingslbl.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settingslbl.Text = "Select Subject Two";
                }).GetHtml()

        @Html.DevExpress().ComboBox(
          settingscbo =>
          {
              settingscbo.Name = "SubjectID2";
              settingscbo.ControlStyle.CssClass = "editor";
              settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
              settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
              settingscbo.Width = System.Web.UI.WebControls.Unit.Pixel(200);
              settingscbo.Properties.TextField = "SubjectName";
              settingscbo.Properties.ValueField = "SubjectID";
              settingscbo.Properties.EnableClientSideAPI = true;
              //settingscbo.ShowModelErrors = true;
              //settingscbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
              //settingscbo.Properties.ClientSideEvents.SelectedIndexChanged = "examMarkEntryController.SelectedClass";
          }).GetHtml()

    </div>

    <div class="col-sm-3">

        @Html.DevExpress().Label(settingslbl =>
                {
                    settingslbl.Name = "lblSubject3";
                    settingslbl.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settingslbl.Text = "Select Subject Three";
                }).GetHtml()

        @Html.DevExpress().ComboBox(
          settingscbo =>
          {
              settingscbo.Name = "SubjectID3";
              settingscbo.ControlStyle.CssClass = "editor";
              settingscbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
              settingscbo.Properties.DropDownStyle = DropDownStyle.DropDown;
              settingscbo.Width = System.Web.UI.WebControls.Unit.Pixel(200);
              settingscbo.Properties.TextField = "SubjectName";
              settingscbo.Properties.ValueField = "SubjectID";
              settingscbo.Properties.EnableClientSideAPI = true;
              //settingscbo.ShowModelErrors = true;
              //settingscbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
              //   settingscbo.Properties.ClientSideEvents.SelectedIndexChanged = "examMarkEntryController.SelectedClass";
          }).GetHtml()

    </div>

    <div class="col-sm-3">

        @Html.DevExpress().Button(
        settingsbtn =>
        {
            settingsbtn.Name = "btnGetStudent";
            settingsbtn.ControlStyle.CssClass = "btnpaddingrow20px";
            settingsbtn.Text = "Get Student List";
            settingsbtn.Width = 150;
            settingsbtn.Images.Image.IconID = IconID.EditPaste16x16;
            settingsbtn.ImagePosition = ImagePosition.Left;
            //settings.ClientSideEvents.Click = "function(s, e) { CallbackPanel.PerformCallback(); }";
            settingsbtn.ClientSideEvents.Click = "examMarkEntryController.btnClickGetStudentList";
        }).GetHtml()

    </div>

</div>


<br />

<div class="row">

    <div class="col-sm-12" id="divexammarksentry">
        @{ Html.RenderPartial("ListExamMarksEntry"); }
    </div>
</div>


    @Html.DevExpress().LoadingPanel(
        settings =>
        {
            settings.Name = "loadingPanelExamMarkEntry";
            settings.Modal = true;
            settings.ContainerElementID = "";
            settings.Styles.LoadingDiv.BackColor = System.Drawing.Color.White;
        }).GetHtml()












