@using appSchool.ViewModels
@{
    var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "GridDesignationMaster";
            settings.KeyFieldName = "DesignationID";
            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            //settings.Height = System.Web.UI.WebControls.Unit.Percentage(100);

            settings.CallbackRouteValues = new { Controller = "DesignationMaster", Action = "PartialDesignationView" };
            settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "DesignationMaster", Action = "AddNewDesignation" };
            settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "DesignationMaster", Action = "UpdateDesignation" };
            settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "DesignationMaster", Action = "DeleteDesignation" };
            settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
            settings.SettingsBehavior.ConfirmDelete = true;

            settings.SettingsPopup.EditForm.ShowHeader = true;
            settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.Center;
            settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.Middle;
            settings.Styles.AlternatingRow.Enabled = DevExpress.Utils.DefaultBoolean.True;

            settings.CommandColumn.Visible = true;
            settings.Styles.CommandColumn.Spacing = System.Web.UI.WebControls.Unit.Pixel(10);
            settings.CommandColumn.ButtonType = GridViewCommandButtonType.Default;
            if (PermissionFlag._AddFlag == true)
                settings.CommandColumn.ShowNewButtonInHeader = true;

            if (PermissionFlag._ModFlag == true)
                settings.CommandColumn.ShowEditButton = true;
            if (PermissionFlag._DelFlag == true)
                settings.CommandColumn.ShowDeleteButton = true;
            

            //settings.Columns.Add("DesignationName").EditFormSettings.ColumnSpan = 3;
            settings.Columns.Add(column =>
            {
                column.FieldName = "DesignationName";
                column.Caption = "Designation Name";
                column.ToolTip = "Click to Sort";
            });

            settings.Columns.Add(column =>
            {
                column.FieldName = "DesignationType";
                column.Caption = "DesignationType";
                column.Width = System.Web.UI.WebControls.Unit.Pixel(120);
                //column.EditFormSettings.ColumnSpan = 1;

                column.ColumnType = MVCxGridViewColumnType.ComboBox;

                var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
                comboBoxProperties.DataSource = (cCommon.GetDesignationType());
                comboBoxProperties.TextField = "Value";
                comboBoxProperties.ValueField = "Key";
                //comboBoxProperties.ValueType = typeof(int);
            });
            
            settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Bottom;
            settings.SettingsPager.FirstPageButton.Visible = true;
            settings.SettingsPager.LastPageButton.Visible = true;
            settings.SettingsPager.PageSizeItemSettings.Visible = true;
            
            settings.Settings.ShowFilterRow = true;
            settings.Settings.ShowFilterRowMenu = true;
            settings.Settings.ShowHeaderFilterButton = true;
            settings.CommandColumn.Visible = true;
            settings.CommandColumn.Width = System.Web.UI.WebControls.Unit.Percentage(10);
            settings.CommandColumn.ShowClearFilterButton = true;
            settings.PreRender = (sender, e) => {
                //((MVCxGridView)sender).StartEdit(1);
            };

            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            settings.SettingsPager.PageSize = 200;
            settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
            
            settings.SettingsBehavior.AllowFocusedRow = true;
            settings.ClientSideEvents.FocusedRowChanged = "designationMasterController.RowSelectionChange";
        });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()





